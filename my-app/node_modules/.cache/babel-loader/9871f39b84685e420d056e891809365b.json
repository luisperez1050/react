{"ast":null,"code":"var _jsxFileName = \"/Users/luisperez/code/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.value);\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nclass Board extends React.Component {\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    });\n  }\n\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'} `;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, status), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xIsNext: true\n    };\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[history.length - 1];\n    const winner = calculateWinner(current.squares);\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: ${this.state.xIsNext ? 'X' : 'O'} `;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, status), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(Game, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/luisperez/code/react/my-app/src/index.js"],"names":["React","ReactDOM","render","Square","props","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","Component","handleClick","state","slice","xIsNext","setState","renderSquare","winner","status","Game","constructor","history","Array","fill","current","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\n\n  function Square(props) {\n      return (\n        <button className=\"square\" \n          onClick={props.onClick}\n        >\n          {props.value}\n        </button>\n      );\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for(let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  class Board extends React.Component {\n\n    handleClick(i) {\n      const squares = this.state.squares.slice();\n      if(calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext,\n      });\n    }\n\n    renderSquare(i) {\n      return (\n        <Square \n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      const winner = calculateWinner(this.state.squares);\n      let status;\n      if(winner) {\n        status = `Winner: ${winner}`;\n      } else {\n        status= `Next player: ${this.state.xIsNext ? 'X' : 'O'} `;\n      }\n\n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        xIsNext: true,\n      };\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[history.length -1];\n      const winner = calculateWinner(current.squares);\n      let status;\n      if(winner) {\n        status = `Winner: ${winner}`;\n      } else {\n        status= `Next player: ${this.state.xIsNext ? 'X' : 'O'} `;\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );"]},"metadata":{},"sourceType":"module"}