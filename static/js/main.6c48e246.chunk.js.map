{"version":3,"sources":["components/HeaderNav.js","javascript/utilities.js","components/ThemeToggler.js","components/GameItems.js","components/Layout.js","components/Footer.js","CardGame.js","index.js"],"names":["HeaderNav","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","cardLayout","column","row","turns","seconds","minutes","points","cardValue","doesItMatch","tries","pad","startLayout","document","querySelector","innerHTML","outer","inner","all_cards","querySelectorAll","divs","i","length","getElementById","parentNode","removeChild","j","Math","floor","random","tempi","tempj","appendChild","shuffleCards","verifyCardsMatch","forEach","card","classList","add","cards","addEventListener","selectedCard","checkValue","dataset","card_value","push","console","log","toggle","style","pointerEvents","setTimeout","match","selected","remove","container","val","timerIncrement","clear","number","ThemeToggler","useEffect","themeSelector","body","checked","GameItems","Layout","setInterval","setAttribute","Footer","Date","getFullYear","CardGame","Square","props","onClick","value","Board","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","calculateWinner","setState","concat","step","winner","map","move","desc","key","jumpTo","lines","a","b","c","ReactDOM","render"],"mappings":"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","file":"static/js/main.6c48e246.chunk.js","sourcesContent":["import React from 'react';\n\nconst HeaderNav = () => {\n    return (\n        <header>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"/react\">React Card Game <span className=\"sr-only\">(current)</span></a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n    );\n}\n\nexport default HeaderNav;","const cardLayout = {\n    column: 6,\n    row: 6\n};\nlet turns = 0;\nlet seconds = 0;\nlet minutes = 0;\nlet points = 0;\t\nlet cardValue = 0;\nlet doesItMatch = [];\nlet tries = pad(0);\n\n// default check for input field to set theme\n// on change toggle theme \nexport function themeSelector() {\n    const themeSelector = document.querySelector(\"input[type='checkbox']\");\n    const body = document.querySelector(\"body\");\n\n    if (themeSelector.checked) body.classList.add(\"dark-theme\");\n    themeSelector.addEventListener('change', () => {\n        (themeSelector.checked) ? body.classList.add(\"dark-theme\") : body.classList.remove(\"dark-theme\");\n    })\n\n}\n\nexport function startGame() {\n    document.getElementById('start').addEventListener('click', () => {\n\t\tsetInterval(timerIncrement, 1000);\n\t\tdocument.querySelector('.row').classList.remove('disabled');\n\t\tdocument.getElementById('start').setAttribute('disabled', '');\n\t});\n}\n\nexport function resetGame() {\n    document.getElementById('reset').addEventListener('click', () => {\n        seconds = 0;\n        minutes = 0;\n        tries = 0;\n        points = 0;\n\t\ttimerIncrement(true);\n\t\tdocument.querySelector('.row').innerHTML = '';\n\t\tstartLayout(cardLayout.column, cardLayout.row);\n\t\t//need to iterate every element\n        document.querySelectorAll('.card-value').forEach(card => card.classList.add('hide'));\n        \n        verifyCardsMatch();\n\t});\n}\n\nexport function startLayout(column, row) {\n    document.querySelector('#timer').innerHTML = \"Timer: 0:00\";\n    document.querySelector('#card_flips').innerHTML = \"Turns: 00\";\n    document.querySelector('#points').innerHTML = \"Points: 00\";\n\n\n    \n    for (let outer = 0; outer < column; outer++){\n        for (let inner = 0; inner < row; inner++){\n            cardValue++;\n            if (cardValue == 6){cardValue = 0;}\n            \n            document.querySelector('.row').innerHTML +=\n            `<div class='col-4 col-md-2' id=\"${outer}${inner}\">\n                <div class='card-container'></div>\n                <div class='card-value' data-card_value=\"${cardValue}\"><span> ${cardValue} </span> </div>\n            </div>`;\n        }\n    }\n    shuffleCards();\n}\n// borrowed from JS fiddle\nexport function shuffleCards(){\n\n    let all_cards = document.querySelectorAll('div.col-4');\n    let divs = [...all_cards];\n\n    for(let i = 0; i < divs.length; i++) document.getElementById(divs[i].id).parentNode.removeChild(document.getElementById(divs[i].id));            \n    //the fisher yates algorithm, from http://stackoverflow.com/questions/2450954/how-to-randomize-a-javascript-array\n    let i = divs.length;\n    if ( i == 0 ) return false;\n    while ( --i ) {\n        let j = Math.floor( Math.random() * ( i + 1 ) );\n        let tempi = divs[i];\n        let tempj = divs[j];\n        divs[i] = tempj;\n        divs[j] = tempi;\n    }\n\n    for(let i = 0; i < divs.length; i++) document.querySelector('.row').appendChild(divs[i]);\n                \n}\n\nexport function verifyCardsMatch() {\n    document.querySelectorAll('.card-value').forEach(card => card.classList.add('hide'));\n\n    const cards = document.querySelectorAll('.col-4');\n\t[...cards].forEach( card => {\n\t\tcard.addEventListener('click', () => {\n\t\t\tlet selectedCard = card.id;\n\t\t\tlet checkValue = card.querySelector('.card-value').dataset.card_value;\n\t\t\tdoesItMatch.push(checkValue);\n\t\t\tconsole.log(doesItMatch);\n\t\t\tturns++;\n\n\t\t\tdocument.getElementById(selectedCard).querySelector('.card-container').classList.toggle('hide');\n\t\t\tdocument.getElementById(selectedCard).querySelector('.card-container').classList.add('selected');\n\t\t\tdocument.getElementById(selectedCard).querySelector('.card-value').classList.toggle('hide');\n\n\t\t\tif (turns == 2) {\n\t\t\t\t[...cards].forEach( card => card.style.pointerEvents = 'none');\n\t\t\t\tif (doesItMatch[0] === doesItMatch[1]){\n\t\t\t\t\tpoints++;\n\t\t\t\t\tpoints = pad(points);\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tdocument.getElementById('points').innerHTML = `Points: ${points}`;\n\t\t\t\t\t\tdocument.querySelectorAll(`.selected ~ [data-card_value=\"${checkValue}\"] span`).forEach( match => match.innerHTML = 'MATCH');\n\t\t\t\t\t\tdocument.querySelectorAll(`.selected ~ [data-card_value=\"${checkValue}\"]`).forEach( selected => selected.classList.add('card-match'));\n\t\t\t\t\t\tdocument.querySelectorAll(`.selected ~ [data-card_value=\"${checkValue}\"]`).forEach( selected => selected.classList.remove('card-value'));\n\t\t\t\t\t\t[...cards].forEach( card => card.style.pointerEvents = 'all');\n\t\t\t\t\t\tdocument.querySelectorAll('div.selected').forEach( selected => selected.remove());\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(points == 18){\n\t\t\t\t\t\t\tdocument.getElementById('points').innerHTML = \" <h2> You win Yay! Reset Game to Start Over</h2>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 1200);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tdocument.querySelectorAll('.card-container').forEach( container => container.classList.remove('hide'));\n\t\t\t\t\t\tdocument.querySelectorAll('.card-value').forEach( val => val.classList.add('hide'));\n\t\t\t\t\t\tdocument.querySelectorAll('.card-container').forEach( container => container.classList.remove('selected'));\n\t\t\t\t\t\t[...cards].forEach( card => card.style.pointerEvents = 'all');\n\t\t\t\t\t}, 1200);\n\t\t\t\t}\n\t\t\t\tturns = 0;\n\t\t\t\tdoesItMatch= [];\n\t\t\t\ttries++;\n\t\t\t\ttries = pad(tries);\n\t\t\t}\n\t\t\t\n\t\t\tdocument.getElementById('card_flips').innerHTML = `Turns: ${tries}`;\n\n\t\t});\n\t});\n}\n// used to display timer\nexport function timerIncrement(clear = false) {\n    seconds++;\n\n    if (clear) {\n        seconds = 0; \n        minutes = 0;\n    }\n    \n    seconds = pad(seconds);\n\n    if(seconds == 60){\n        minutes++;\n        minutes = pad(minutes);\n        seconds = pad(0);\n    }\n\n    document.getElementById('timer').innerHTML = `Timer: ${minutes}:${seconds}`;\n}\n// add leading zero for UI\nexport function pad(number) {\n    return (number < 10) ? (`0${number}`) : number;\n}\n\nexport default cardLayout;","import React, { useEffect } from 'react';\nimport { themeSelector } from '../javascript/utilities'\n\nconst ThemeToggler = () => {\n\n    useEffect( () => {\n        themeSelector();\n    });\n\n    return (\n        <div className=\"title\">\n            <h1>Welcome to this Exciting Memory Game</h1>\n            <label className=\"switch\">\n                <span className=\"label\">Theme</span>\n                <input type=\"checkbox\" />\n                <span className=\"slider round\"></span>\n            </label>\n        </div>\n    );\n}\n\nexport default ThemeToggler;","import React from 'react';\n\nconst GameItems = () => {\n    \n    return (\n\n        <div className=\"game-items\">\n            <p>\n                Flip any card and try to match the cards. <br />\n                You can change the difficulty with the mode button.\n            </p>\n            <div id=\"timer\" className=\"timer\">\n\n            </div>\n            <div id=\"card_flips\" className=\"card-flips\">\n\n            </div>\n\n            <div className=\"buttons\">\n                <div className=\"card-options\">\n                    <button id=\"start\" className=\"btn btn-primary\">Start Game</button>\n                    <button id=\"reset\" className=\"btn btn-danger\">Reset Game</button>\n                </div>\n            </div>\n\n            <div className=\"points\" id=\"points\">\n\n            </div>\n        </div>\n\n    );\n}\n\nexport default GameItems;","import React, { useEffect }  from 'react';\nimport ThemeToggler from './ThemeToggler';\nimport GameItems from './GameItems';\nimport cardLayout, { startLayout, timerIncrement, pad, startGame, resetGame, verifyCardsMatch } from '../javascript/utilities';\n\n\nconst Layout = () => {\n\n    useEffect( () => {\n        startLayout(cardLayout.column, cardLayout.row);\n        startGame();\n        resetGame();\n        verifyCardsMatch();\n        timerIncrement();\n        pad();\n    });\n\n    return (\n        <main>\n            <section className=\"container\">\n                <ThemeToggler></ThemeToggler>\n                <GameItems></GameItems>\n\n                <div className=\"row disabled\">\n                    {/* where cards are created */}\n                </div>\n            </section>\n        </main>\n    );\n}\n\nexport default Layout;","import React from 'react'\n\nconst Footer = () => {\n    return (\n        <footer> By: Luis Perez {new Date().getFullYear()}</footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport HeaderNav from './components/HeaderNav';\nimport Layout from './components/Layout';\nimport Footer from './components/Footer';\n\nfunction CardGame() {\n  return (\n    <div className=\"card-game\">\n      <HeaderNav></HeaderNav>\n      <Layout></Layout>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default CardGame;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CardGame from './CardGame'\nimport './styles/CardGame.css';\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n    \n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      \n      <div>\n        <CardGame></CardGame>\n      </div>\n    );\n  }\n}\n\nclass GameCopy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null)\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n    \n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n\n      \n      <div className=\"game\">\n        <CardGame></CardGame>\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}