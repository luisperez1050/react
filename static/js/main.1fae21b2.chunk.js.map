{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"iPAIE,SAASA,EAAOC,GACZ,OACE,4BAAQC,UAAU,SAChBC,QAASF,EAAME,SAEdF,EAAMG,OAKf,SAASC,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEDC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cAClBD,EAAMC,GADY,GAC7BE,EAD6B,KAC1BC,EAD0B,KACvBC,EADuB,KAEpC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IAAML,EAAQI,KAAOJ,EAAQM,GACpE,OAAON,EAAQI,GAGnB,OAAO,K,IAGHG,E,2KAESL,GAAI,IAAD,OACd,OACE,kBAACR,EAAD,CACEI,MAAOU,KAAKb,MAAMK,QAAQE,GAC1BL,QAAS,kBAAM,EAAKF,MAAME,QAAQK,Q,+BAMtC,OACE,6BACE,yBAAKN,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKb,UAAU,aACZY,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,QAAS,CAAC,CACRd,QAASe,MAAM,GAAGC,KAAK,QAEzBC,WAAY,EACZC,SAAS,GAPM,E,wDAWPhB,GACV,IAAMY,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EAAGX,KAAKK,MAAMI,WAAa,GAE9DjB,EADUc,EAAQA,EAAQX,OAAQ,GAChBH,QAAQmB,QAC7BpB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKM,KAAKK,MAAMK,QAAU,IAAM,IACxCV,KAAKY,SAAS,CACZN,QAASA,EAAQO,OAAO,CAAC,CACvBrB,QAASA,KAEXiB,WAAYH,EAAQX,OACpBe,SAAUV,KAAKK,MAAMK,a,6BAIlBI,GACLd,KAAKY,SAAS,CACZH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAIlB,IAcJC,EAdG,OACDT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMI,YAC7BQ,EAAS1B,EAAgByB,EAAQxB,SAEjC0B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAI,uBAAmBA,GAAnB,mBACjB,OACE,wBAAIE,IAAKF,GACP,4BAAQ/B,QAAS,kBAAM,EAAKkC,OAAOH,KAAnC,IAA4CC,EAA5C,SAYN,OALEN,EADCE,EACK,kBAAcA,GAEb,gBAAD,OAAkBjB,KAAKK,MAAMK,QAAU,IAAM,IAA7C,KAIN,yBAAKtB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACW,EAAD,CACEP,QAASwB,EAAQxB,QACjBH,QAAS,SAACK,GAAD,OAAO,EAAK8B,YAAY9B,OAGrC,yBAAKN,UAAU,aACb,6BAAM2B,GACN,4BAAKG,S,GAnEIhB,IAAMC,WA4EzBsB,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.1fae21b2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\n\n  function Square(props) {\n      return (\n        <button className=\"square\" \n          onClick={props.onClick}\n        >\n          {props.value}\n        </button>\n      );\n  }\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for(let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  \n  class Board extends React.Component {\n\n    renderSquare(i) {\n      return (\n        <Square \n          value={this.props.squares[i]}\n          onClick={() => this.props.onClick(i)}\n        />\n      );\n    }\n  \n    render() {\n      return (\n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [{\n          squares: Array(9).fill(null),\n        }],\n        stepNumber: 0,\n        xIsNext: true,\n      };\n    }\n\n    handleClick(i) {\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\n      const current = history[history.length -1];\n      const squares = current.squares.slice();\n      if(calculateWinner(squares) || squares[i]) {\n        return;\n      }\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        history: history.concat([{\n          squares: squares,\n        }]),\n        stepNumber: history.length,\n        xIsNext: !this.state.xIsNext,\n      });\n    }\n\n    jumpTo(step) {\n      this.setState({\n        stepNumber: step,\n        xIsNext: (step % 2) === 0,\n      });\n    }\n\n    render() {\n      const history = this.state.history;\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step, move) => {\n        const desc = move ? `Go to move # ${move}` : `Go to game start`;\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}> {desc} </button>\n          </li>\n        );\n      });\n\n      let status;\n      if(winner) {\n        status = `Winner: ${winner}`;\n      } else {\n        status= `Next player: ${this.state.xIsNext ? 'X' : 'O'} `;\n      }\n\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board \n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n            />\n          </div>\n          <div className=\"game-info\">\n            <div>{status}</div>\n            <ol>{moves}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );"],"sourceRoot":""}